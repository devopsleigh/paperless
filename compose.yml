# - Run 'docker compose run --rm paperless createsuperuser' to create a user.
#

services:
  paperless_broker:
    image: docker.io/library/redis:7
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      paperless:
    volumes:
      - ./redis_data/redis:/data

  paperless_db:
    container_name: ${SERVICE_NAME}_db
    image: postgres:16
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
       paperless:
    volumes:
      - ./db_data/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: paperless
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  paperless:
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    restart: unless-stopped
    container_name: ${SERVICE_NAME}
    security_opt:
      - no-new-privileges:true
    depends_on:
      - paperless_db
      - paperless_broker
    # ports:
    #   - "8000:8000"
    volumes:
      - ./data/paperless:/usr/src/paperless/data
      - ./data/media:/usr/src/paperless/media
      - ./data/export:/usr/src/paperless/export
      - ./data/consume:/usr/src/paperless/consume
    environment:
      PAPERLESS_REDIS: redis://paperless_broker:6379
      PAPERLESS_DBHOST: paperless_db
      USERMAP_UID: ${USERMAP_UID}
      USERMAP_GID: ${USERMAP_GID}
      PAPERLESS_URL: https://${SERVICE_NAME}.${MY_DOMAIN}
      PAPERLESS_SECRET_KEY:
      PAPERLESS_TIME_ZONE:
      PAPERLESS_OCR_LANGUAGE: eng
    networks:
      proxy:
      paperless:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${SERVICE_NAME}.entrypoints=http"
      - "traefik.http.routers.${SERVICE_NAME}.rule=Host(`${SERVICE_NAME}.${MY_DOMAIN}`)"
      - "traefik.http.routers.${SERVICE_NAME}.middlewares=default-whitelist@file"
      - "traefik.http.routers.${SERVICE_NAME}.middlewares=${SERVICE_NAME}-https-redirect"
      - "traefik.http.routers.${SERVICE_NAME}-secure.entrypoints=https"
      - "traefik.http.routers.${SERVICE_NAME}-secure.rule=Host(`${SERVICE_NAME}.${MY_DOMAIN}`)"
      - "traefik.http.routers.${SERVICE_NAME}-secure.tls=true"
      - "traefik.http.routers.${SERVICE_NAME}-secure.service=${SERVICE_NAME}"
      - "traefik.http.middlewares.${SERVICE_NAME}-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.services.${SERVICE_NAME}.loadbalancer.server.port=${SERVICE_INTERNAL_PORT}"
      - "traefik.docker.network=proxy"

networks:
  proxy:
    external: true
  paperless:
